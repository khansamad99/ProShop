[{"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/index.js":"1","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/App.js":"2","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/store.js":"3","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Header.js":"4","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Footer.js":"5","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ProductScreen.js":"6","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/HomeScreen.js":"7","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/productReducer.js":"8","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Product.js":"9","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Rating.js":"10","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Loader.js":"11","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Message.js":"12","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/productAction.js":"13","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/productConstants.js":"14","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/CartScreen.js":"15","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/cartReducer.js":"16","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/cartConstants.js":"17","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/cartAction.js":"18","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/userReducers.js":"19","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/userConstants.js":"20","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/LoginScreen.js":"21","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/userActions.js":"22","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/FormContainer.js":"23","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/RegisterScreen.js":"24","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ProfileScreen.js":"25","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ShippingScreen.js":"26","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/CheckoutSteps.js":"27","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/PaymentScreen.js":"28","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/PlaceOrder.js":"29","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/orderReducer.js":"30","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/orderAction.js":"31","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/orderConstants.js":"32","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/OrderScreen.js":"33"},{"size":314,"mtime":1607796264768,"results":"34","hashOfConfig":"35"},{"size":1495,"mtime":1613739738251,"results":"36","hashOfConfig":"35"},{"size":1685,"mtime":1613727872125,"results":"37","hashOfConfig":"35"},{"size":1818,"mtime":1611426340770,"results":"38","hashOfConfig":"35"},{"size":360,"mtime":1606925164875,"results":"39","hashOfConfig":"35"},{"size":4101,"mtime":1609227106139,"results":"40","hashOfConfig":"35"},{"size":1025,"mtime":1609257716559,"results":"41","hashOfConfig":"35"},{"size":1043,"mtime":1608792050983,"results":"42","hashOfConfig":"35"},{"size":928,"mtime":1607017823855,"results":"43","hashOfConfig":"35"},{"size":1753,"mtime":1607022032377,"results":"44","hashOfConfig":"35"},{"size":453,"mtime":1608743091658,"results":"45","hashOfConfig":"35"},{"size":275,"mtime":1608742674697,"results":"46","hashOfConfig":"35"},{"size":1093,"mtime":1608790001237,"results":"47","hashOfConfig":"35"},{"size":360,"mtime":1608744277435,"results":"48","hashOfConfig":"35"},{"size":3857,"mtime":1609234387276,"results":"49","hashOfConfig":"35"},{"size":1376,"mtime":1612248619391,"results":"50","hashOfConfig":"35"},{"size":288,"mtime":1613235633999,"results":"51","hashOfConfig":"35"},{"size":1257,"mtime":1612248541858,"results":"52","hashOfConfig":"35"},{"size":2131,"mtime":1613727872081,"results":"53","hashOfConfig":"35"},{"size":1475,"mtime":1613737659589,"results":"54","hashOfConfig":"35"},{"size":2320,"mtime":1611485578223,"results":"55","hashOfConfig":"35"},{"size":4126,"mtime":1613752934159,"results":"56","hashOfConfig":"35"},{"size":330,"mtime":1611336756643,"results":"57","hashOfConfig":"35"},{"size":3381,"mtime":1611486066947,"results":"58","hashOfConfig":"35"},{"size":5707,"mtime":1613738197175,"results":"59","hashOfConfig":"35"},{"size":2744,"mtime":1613238610365,"results":"60","hashOfConfig":"35"},{"size":1497,"mtime":1612190891999,"results":"61","hashOfConfig":"35"},{"size":1978,"mtime":1612259501834,"results":"62","hashOfConfig":"35"},{"size":6297,"mtime":1613237100302,"results":"63","hashOfConfig":"35"},{"size":2511,"mtime":1613737288250,"results":"64","hashOfConfig":"35"},{"size":4145,"mtime":1613741467245,"results":"65","hashOfConfig":"35"},{"size":1078,"mtime":1613740847843,"results":"66","hashOfConfig":"35"},{"size":6449,"mtime":1613741041659,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"y4fc80",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/index.js",[],["140","141"],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/App.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/store.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Header.js",["142"],"import React from 'react'\nimport {useSelector,useDispatch} from \"react-redux\"\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container,NavDropdown } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {logout} from '../actions/userActions'\n\nconst Header = () => {\n\n  const dispatch = useDispatch()\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n  const userLogin = useSelector((state) => state.userLogin)\n  const {userInfo} = userLogin\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Footer.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ProductScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/HomeScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/productReducer.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Product.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Rating.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Loader.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/Message.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/productAction.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/productConstants.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/CartScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/cartReducer.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/cartConstants.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/cartAction.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/userReducers.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/userConstants.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/LoginScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/userActions.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/FormContainer.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/RegisterScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ProfileScreen.js",["143","144"],"import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listMyOrders } from '../actions/orderAction'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n\n\nconst ProfileScreen = ({location,history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if(!userInfo){\n        history.push('/login')\n    } else {\n        if(user.name){\n            dispatch(getUserDetails('profile'))\n        }\n        else{\n            setName(user.name)\n            setEmail(user.email)\n        }\n    }\n  },[dispatch,history,userInfo,user])\n\n  \n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n    return (\n        <div>\n            <Col md={3}>\n            <h2>User Profile</h2>\n            {message && <Message variant='danger'>{message}</Message>}\n            {}\n            {success && <Message variant='success'>Profile Updated</Message>}\n            {loading ? (\n              <Loader />\n            ) : error ? (\n              <Message variant='danger'>{error}</Message>\n            ) : (\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type='name'\n                    placeholder='Enter name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n    \n                <Form.Group controlId='email'>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type='email'\n                    placeholder='Enter email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n    \n                <Form.Group controlId='password'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Enter password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n    \n                <Form.Group controlId='confirmPassword'>\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Confirm password'\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n    \n                <Button type='submit' variant='primary'>\n                  Update\n                </Button>\n              </Form>\n            )}\n            </Col>\n            <Col md={9}>\n              {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger'>\n                {errorOrders}\n               </Message> : (\n                 <Table striped bordered hover responsive className='table-sm'>\n                   <thead>\n                     <tr>\n                       <th>ID</th>\n                       <th>DATE</th>\n                       <th>TOTAL</th>\n                       <th>PAID</th>\n                       <th>DELIVERED</th>\n                     </tr>\n                   </thead>\n                   <tbody>\n                     {orders.map(map=> (\n                       <tr key={orders._id}>\n                         <td>{orders._id}</td>\n                         <td>{orders._createdAt}</td>\n                         <td>{orders._totalPrice}</td>\n                         <td>{orders.isPaid ? orders.paidAt.substring(0,10):(\n                           <i className='fas fa-times' style={{color:'red'}}></i>\n                         )}\n                        </td>\n                         <td>{orders.isDelivered ? (\n                           orders.deliveredAt.substring(0,10)\n                         ) : (\n                           <i className='fas fa-times' style={{ color:'red'}}></i>\n                         )}</td>\n                         <td>\n                           <LinkContainer to={`/order/${orders._id}`}>\n                             <Button className='btn-sm' variant='light'>Details</Button>\n                           </LinkContainer>\n                         </td>\n                       </tr>\n                     ))}\n                   </tbody>\n                 </Table>\n               )}\n            </Col>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/ShippingScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/components/CheckoutSteps.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/PaymentScreen.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/PlaceOrder.js",["145"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {createOrder} from '../actions/orderAction'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\nconst PlaceOrder = ({history}) => {\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n\n    if (!cart.shippingAddress.address) {\n        history.push('/shipping')\n      } else if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n     //   Calculate prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        cart.itemsPrice = addDecimals(\n            cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n        cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n        cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n        cart.totalPrice = (\n            Number(cart.itemsPrice) +\n            Number(cart.shippingPrice) +\n            Number(cart.taxPrice)\n        ).toFixed(2)\n    \n        const orderCreate = useSelector((state) => state.orderCreate)\n        const { order, success, error } = orderCreate\n      \n        useEffect(() => {\n          if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: USER_DETAILS_RESET })\n            dispatch({ type: ORDER_CREATE_RESET })\n          }\n          // eslint-disable-next-line\n        }, [history, success])\n        \n    const placeOrderHandler = () => {\n        dispatch(\n            createOrder({\n              orderItems: cart.cartItems,\n              shippingAddress: cart.shippingAddress,\n              paymentMethod: cart.paymentMethod,\n              itemsPrice: cart.itemsPrice,\n              shippingPrice: cart.shippingPrice,\n              taxPrice: cart.taxPrice,\n              totalPrice: cart.totalPrice,\n            })\n          )\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                    <h2>Shipping</h2>\n                    <p>\n                        <strong>Address:</strong>\n                        {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                        {cart.shippingAddress.postalCode},{' '}\n                        {cart.shippingAddress.country}\n                    </p>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                    <h2>Payment Method</h2>\n                    <strong>Method: </strong>\n                    {cart.paymentMethod}\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                    <h2>Order Items</h2>\n                    {cart.cartItems.length === 0 ? (\n                        <Message>Your cart is empty</Message>\n                    ) : (\n                        <ListGroup variant='flush'>\n                        {cart.cartItems.map((item, index) => (\n                            <ListGroup.Item key={index}>\n                            <Row>\n                                <Col md={1}>\n                                <Image\n                                    src={item.image}\n                                    alt={item.name}\n                                    fluid\n                                    rounded\n                                />\n                                </Col>\n                                <Col>\n                                <Link to={`/product/${item.product}`}>\n                                    {item.name}\n                                </Link>\n                                </Col>\n                                <Col md={4}>\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\n                                </Col>\n                            </Row>\n                            </ListGroup.Item>\n                        ))}\n                        </ListGroup>\n                    )}\n                    </ListGroup.Item>\n                </ListGroup>\n                </Col>\n                <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Order Summary</h2>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                        <Col>Items</Col>\n                        <Col>${cart.itemsPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                        <Col>Shipping</Col>\n                        <Col>${cart.shippingPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                        <Col>Tax</Col>\n                        <Col>${cart.taxPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                        <Col>Total</Col>\n                        <Col>${cart.totalPrice}</Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        // {error && <Message variant='danger'>{error}</Message>}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Button\n                        type='button'\n                        className='btn-block'\n                        disabled={cart.cartItems === 0}\n                        onClick={placeOrderHandler}\n                        >\n                        Place Order\n                        </Button>\n                    </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrder;","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/reducers/orderReducer.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/actions/orderAction.js",["146","147"],"import axios from \"axios\"\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_RESET\n} from '../constants/orderConstants'    \n\nimport { logout } from './userActions'\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.post(`/api/order`, order, config)\n  \n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data,\n      })\n      dispatch({\n        type: CART_CLEAR_ITEMS,\n        payload: data,\n      })\n      localStorage.removeItem('cartItems')\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: message,\n      })\n    }\n  }\n\n\n\n  export const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_DETAILS_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/orders/${id}`, config)\n  \n      dispatch({\n        type: ORDER_DETAILS_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: message,\n      })\n    }\n  }\n\n\n  export const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type':'application.json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config)\n  \n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload: message,\n      })\n    }\n  }\n  \n\n  export const listMyOrders = () => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_LIST_MY_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/orders/myorders`, config)\n  \n      dispatch({\n        type: ORDER_LIST_MY_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: ORDER_LIST_MY_FAIL,\n        payload: message,\n      })\n    }\n  }\n  ","/media/samad/New Volume/Projects/MERN/ProShop/ui/src/constants/orderConstants.js",[],"/media/samad/New Volume/Projects/MERN/ProShop/ui/src/pages/OrderScreen.js",["148","149"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder\n} from '../actions/orderAction'\nimport {\n  ORDER_PAY_RESET\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  \n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  \n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},{"ruleId":"154","severity":1,"message":"158","line":2,"column":31,"nodeType":"156","messageId":"157","endLine":2,"endColumn":34},{"ruleId":"154","severity":1,"message":"159","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":22},{"ruleId":"160","severity":1,"message":"161","line":147,"column":37,"nodeType":"162","endLine":148,"endColumn":28},{"ruleId":"154","severity":1,"message":"163","line":10,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":23},{"ruleId":"154","severity":1,"message":"164","line":17,"column":5,"nodeType":"156","messageId":"157","endLine":17,"endColumn":24},{"ruleId":"154","severity":1,"message":"165","line":5,"column":44,"nodeType":"156","messageId":"157","endLine":5,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":72,"column":6,"nodeType":"168","endLine":72,"endColumn":44,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'listMyOrders' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'ORDER_CREATE_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"175","text":"176"},[2053,2091],"[dispatch, orderId, successPay, order, userInfo, history]"]